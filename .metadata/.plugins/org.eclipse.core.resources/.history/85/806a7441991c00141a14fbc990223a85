
public class LargeBinaryPower {
	
	private static int arraySize = 10; // should be like 500 later
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		printArray(largePowerBinary(5));
	}
	
	
	/**
	 * algoritm:
	 * börja med två på position 499 och dubbla det, fortsätt dubbla tills man överstiger 10 då tar man resten(
	 * alltså man lämnar det som kommer efter 1 i 10 och flyttar den 1'an) och flyttar ett steg åt vänster(
	 * position 498) och dubblar först det som redan är där och gör ovanstående med rest m.m. och sedan adderar
	 * den 1'an som man har från rest i nedanstående.
	 * 
	 * @param raiseTo
	 * @return
	 */
	// raises the number 2 to the power of the specified number
	public static int[] largePowerBinary(int raiseTo){
		int[] theNumber = new int[arraySize];
		for(int j = 0; j < theNumber.length; j++){
			theNumber[j] = -1;
		}
		
		int lastIndex = arraySize-1;
		theNumber[lastIndex] = 1;
		printArray(theNumber);
		for(int i = 0; i < raiseTo; i++){
			int carry = 0;
			for(int j = arraySize-1; theNumber[j] != -1; j--){
				int temp = (theNumber[j]*2)+carry;
				if(temp > 9){
					carry = 1;
					theNumber[j] = temp-10;
				} else{
					carry = 0;
					theNumber[j] = temp;
				}
			}
			printArray(theNumber);
		}
		
		return theNumber;
	}
	
	public static void printArray(int[] theArray){
		for(int i = 0; i < theArray.length; i++){
			System.out.print(theArray[i]);
		}
		System.out.println();
	}
	
}
